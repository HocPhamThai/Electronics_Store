@page "/administrator/categories"
@inject ICategoriesService _categoriesService
@attribute [Authorize(Roles = "Administrator")]
@implements IDisposable


<h3>Categories</h3>

<div class="header">
    <div class="col">Category Name</div>
    <div class="col">Access Url</div>
    <div class="col">Visibility</div>
    <div class="col"></div>
</div>

@foreach (Category category in _categoriesService.AdminCategories)
{
    @if (!category.isEditing)
    {
        <div class="row">
             <div class="col">
                 @category.CategoryName
             </div>
             <div class="col">
                 @category.CategoryAccessUrl
             </div>
             <div class="col col-visible">
                 <span>@(category.isViewable ? "YesÔ∏è" : "No")</span>
             </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="() => ModifyCategory(category)"><i class="oi oi-pencil"></i></button>
                <button class="btn btn-primary" @onclick="() => DeleteCategory(category.CategoryId)"><i class="oi oi-trash"></i></button>
            </div>
        </div>
    }
    else
    {
        <EditForm Model="modifyingCategory" OnSubmit="UpdateCategory">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="modifyingCategory.CategoryName" class="form-control"></InputText>
                </div>
                <div class="col">
                    <InputText @bind-Value="modifyingCategory.CategoryAccessUrl" class="form-control"></InputText>
                </div>
                <div class="col col-visible">
                    <InputCheckbox @bind-Value="modifyingCategory.isViewable" style="transform: scale(1.5,1.5);"></InputCheckbox>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary"><i class="oi oi-cloud-upload"></i></button>
                    <button class="btn btn-primary" @onclick="DropModifying"><i class="oi oi-circle-x"></i></button>
                </div>
            </div>
        </EditForm>
    }
}
<button class="btn btn-primary" @onclick="CreateCategory"><i class="oi oi-plus"></i> Create a New Category</button>


@code {
    Category? modifyingCategory = null;
    
    protected override async Task OnInitializedAsync()
    {
        await _categoriesService.GetCategoriesAsAdmin();
        _categoriesService.ChangeOfCategory += StateHasChanged;
    }

    private async Task UpdateCategory()
    {
        if (!modifyingCategory.isNew)
            await _categoriesService.UpdateCategory(modifyingCategory);
        else
            await _categoriesService.AddCategory(modifyingCategory);
        modifyingCategory = new Category();
    }

    private async Task DropModifying()
    {
        modifyingCategory = new Category();
        await _categoriesService.GetCategoriesAsAdmin();
    }
    
    private void ModifyCategory(Category category)
    {
        category.isEditing = true;
        modifyingCategory = category;
    }
    
    private void CreateCategory() => modifyingCategory = _categoriesService.CreateCategory();

    private async Task DeleteCategory(int categoryId) => await _categoriesService.DeleteCategoryById(categoryId);

    public void Dispose() => _categoriesService.ChangeOfCategory -= StateHasChanged;
    

}