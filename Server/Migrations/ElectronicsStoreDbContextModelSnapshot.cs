// <auto-generated />
using System;
using Electronics_Store.Server.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Electronics_Store.Server.Migrations
{
    [DbContext(typeof(ElectronicsStoreDbContext))]
    partial class ElectronicsStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Electronics_Store.Shared.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Electronics_Store.Shared.CartProduct", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("productVarietyId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("userId", "productId", "productVarietyId");

                    b.ToTable("CartProducts");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryAccessUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isViewable")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryAccessUrl = "laptops",
                            CategoryName = "Laptops",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryAccessUrl = "smartphones",
                            CategoryName = "SmartPhones",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryAccessUrl = "headphones",
                            CategoryName = "HeadPhones",
                            isDeleted = false,
                            isViewable = true
                        });
                });

            modelBuilder.Entity("Electronics_Store.Shared.Order.Order", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderId"));

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("orderPrice")
                        .HasColumnType("decimal(20,2)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("orderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Order.OrderProduct", b =>
                {
                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("productVarietyId")
                        .HasColumnType("int");

                    b.Property<decimal>("orderProductPrice")
                        .HasColumnType("decimal(20,2)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("orderId", "productId", "productVarietyId");

                    b.HasIndex("productId");

                    b.HasIndex("productVarietyId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Picture", b =>
                {
                    b.Property<int>("pictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pictureId"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("pictureInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pictureId");

                    b.HasIndex("ProductId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("IsTopProduct")
                        .HasColumnType("bit");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isViewable")
                        .HasColumnType("bit");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            IsTopProduct = true,
                            ProductCategoryId = 1,
                            ProductDetail = "Experience unparalleled computing power with our High-Performance Gaming Laptop. This powerful machine is crafted for all your computing needs, especially gaming. Immerse yourself in cutting-edge technology and elevate your gaming experience to new heights.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1525547719571-a2d4ac8945e2?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8bGFwdG9wfGVufDB8fDB8fHww",
                            ProductName = "High-Performance Laptop",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 2,
                            IsTopProduct = false,
                            ProductCategoryId = 1,
                            ProductDetail = "Introducing our Medium-Performance Laptop, a versatile device perfect for everyday use. Whether you're working, studying, or enjoying entertainment, this laptop offers a reliable performance. Stay connected and productive with this sleek and efficient companion",
                            ProductImageUrl = "https://images.unsplash.com/photo-1525547719571-a2d4ac8945e2?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8bGFwdG9wfGVufDB8fDB8fHww",
                            ProductName = "Medium-Performance Laptop for Everyday Use",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 3,
                            IsTopProduct = false,
                            ProductCategoryId = 1,
                            ProductDetail = "Meet our Save-Battery Laptop, designed to optimize energy efficiency and provide an extended battery life. Perfect for users on the go, this laptop ensures you stay connected without worrying about running out of power. Experience reliability and sustainability in one compact device.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1525547719571-a2d4ac8945e2?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8bGFwdG9wfGVufDB8fDB8fHww",
                            ProductName = "Energy-Efficient Laptop for Extended Battery Life",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 4,
                            IsTopProduct = false,
                            ProductCategoryId = 2,
                            ProductDetail = "Experience the pinnacle of mobile technology with the TechMaster X1, our flagship smartphone. Packed with cutting-edge features, this device is designed for power users who demand the best. From its stunning display to its advanced camera capabilities, the TechMaster X1 redefines what a smartphone can be.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8cGhvbmV8ZW58MHx8MHx8fDA%3D",
                            ProductName = "Flagship Smartphone - TechMaster X1",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 5,
                            IsTopProduct = true,
                            ProductCategoryId = 2,
                            ProductDetail = "Introducing the EchoSlim S22, a sleek and stylish smartphone that doesn't compromise on performance. With its slim design and powerful features, the EchoSlim S22 is perfect for users who prioritize both aesthetics and functionality. Stay connected in style.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8cGhvbmV8ZW58MHx8MHx8fDA%3D",
                            ProductName = "Slim and Stylish - EchoSlim S22",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 6,
                            IsTopProduct = false,
                            ProductCategoryId = 2,
                            ProductDetail = "Get the most value for your money with the SmartPlus Z3, our budget-friendly smart choice. This smartphone offers a balance of performance and affordability, making it ideal for users looking for a reliable device without breaking the bank. Embrace smart living with the SmartPlus Z3.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8cGhvbmV8ZW58MHx8MHx8fDA%3D",
                            ProductName = "Budget-Friendly Smart Choice - SmartPlus Z3",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 7,
                            IsTopProduct = false,
                            ProductCategoryId = 3,
                            ProductDetail = "Immerse yourself in exceptional sound quality with the AcousticX Pro over-ear headphones. Designed for audiophiles, these premium headphones deliver crystal-clear audio and a comfortable listening experience. Elevate your music and entertainment with AcousticX Pro.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1618366712010-f4ae9c647dcb?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8aGVhZHBob25lfGVufDB8fDB8fHww",
                            ProductName = "Premium Over-Ear Headphones - AcousticX Pro",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 8,
                            IsTopProduct = false,
                            ProductCategoryId = 3,
                            ProductDetail = "Experience the freedom of wireless audio with the SonicZen X1 earbuds. These sleek and compact earbuds feature advanced noise-canceling technology, providing a distraction-free listening experience. Enjoy your favorite music on the go with SonicZen X1.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1618366712010-f4ae9c647dcb?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8aGVhZHBob25lfGVufDB8fDB8fHww",
                            ProductName = "Wireless Noise-Canceling Earbuds - SonicZen X1",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 9,
                            IsTopProduct = false,
                            ProductCategoryId = 3,
                            ProductDetail = "Experience flexibility and style with the UrbanFlex FoldX on-ear headphones. These foldable headphones are perfect for on-the-go lifestyles, offering a blend of comfort and portability. Enjoy your favorite tunes with UrbanFlex FoldX",
                            ProductImageUrl = "https://images.unsplash.com/photo-1618366712010-f4ae9c647dcb?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8aGVhZHBob25lfGVufDB8fDB8fHww",
                            ProductName = "Foldable On-Ear Headphones - UrbanFlex FoldX",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 10,
                            IsTopProduct = true,
                            ProductCategoryId = 3,
                            ProductDetail = "Stay motivated during workouts with the FitBeat Sports Edition in-ear headphones. Designed for active lifestyles, these sweat-resistant headphones offer a secure fit and powerful sound. Elevate your fitness journey with FitBeat.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1618366712010-f4ae9c647dcb?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8aGVhZHBob25lfGVufDB8fDB8fHww",
                            ProductName = "Sporty In-Ear Headphones - FitBeat Sports Edition",
                            isDeleted = false,
                            isViewable = true
                        },
                        new
                        {
                            ProductId = 11,
                            IsTopProduct = false,
                            ProductCategoryId = 3,
                            ProductDetail = "Unleash your creativity with the StudioSound Pro professional headset. Ideal for content creators and professionals, these studio-quality headphones deliver exceptional audio accuracy. Elevate your work with the precision of StudioSound Pro.",
                            ProductImageUrl = "https://images.unsplash.com/photo-1618366712010-f4ae9c647dcb?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8aGVhZHBob25lfGVufDB8fDB8fHww",
                            ProductName = "Studio-Quality Professional Headset - StudioSound Pro",
                            isDeleted = false,
                            isViewable = true
                        });
                });

            modelBuilder.Entity("Electronics_Store.Shared.ProductVariant", b =>
                {
                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("productVarietyId")
                        .HasColumnType("int");

                    b.Property<decimal>("initialPrice")
                        .HasColumnType("Decimal(20,2)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isViewable")
                        .HasColumnType("bit");

                    b.Property<decimal>("price")
                        .HasColumnType("Decimal(20,2)");

                    b.HasKey("productId", "productVarietyId");

                    b.HasIndex("productVarietyId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            productId = 1,
                            productVarietyId = 1,
                            initialPrice = 399m,
                            isDeleted = false,
                            isViewable = true,
                            price = 79.99m
                        },
                        new
                        {
                            productId = 1,
                            productVarietyId = 2,
                            initialPrice = 449m,
                            isDeleted = false,
                            isViewable = true,
                            price = 89.99m
                        },
                        new
                        {
                            productId = 1,
                            productVarietyId = 3,
                            initialPrice = 499m,
                            isDeleted = false,
                            isViewable = true,
                            price = 99.99m
                        },
                        new
                        {
                            productId = 1,
                            productVarietyId = 4,
                            initialPrice = 549m,
                            isDeleted = false,
                            isViewable = true,
                            price = 109.99m
                        },
                        new
                        {
                            productId = 1,
                            productVarietyId = 5,
                            initialPrice = 599m,
                            isDeleted = false,
                            isViewable = true,
                            price = 119.99m
                        },
                        new
                        {
                            productId = 1,
                            productVarietyId = 6,
                            initialPrice = 649m,
                            isDeleted = false,
                            isViewable = true,
                            price = 129.99m
                        },
                        new
                        {
                            productId = 1,
                            productVarietyId = 7,
                            initialPrice = 699m,
                            isDeleted = false,
                            isViewable = true,
                            price = 139.99m
                        },
                        new
                        {
                            productId = 1,
                            productVarietyId = 8,
                            initialPrice = 749m,
                            isDeleted = false,
                            isViewable = true,
                            price = 149.99m
                        },
                        new
                        {
                            productId = 2,
                            productVarietyId = 1,
                            initialPrice = 299m,
                            isDeleted = false,
                            isViewable = true,
                            price = 59.99m
                        },
                        new
                        {
                            productId = 2,
                            productVarietyId = 2,
                            initialPrice = 349m,
                            isDeleted = false,
                            isViewable = true,
                            price = 69.99m
                        },
                        new
                        {
                            productId = 2,
                            productVarietyId = 3,
                            initialPrice = 399m,
                            isDeleted = false,
                            isViewable = true,
                            price = 79.99m
                        },
                        new
                        {
                            productId = 2,
                            productVarietyId = 4,
                            initialPrice = 449m,
                            isDeleted = false,
                            isViewable = true,
                            price = 89.99m
                        },
                        new
                        {
                            productId = 2,
                            productVarietyId = 5,
                            initialPrice = 499m,
                            isDeleted = false,
                            isViewable = true,
                            price = 99.99m
                        },
                        new
                        {
                            productId = 2,
                            productVarietyId = 6,
                            initialPrice = 549m,
                            isDeleted = false,
                            isViewable = true,
                            price = 109.99m
                        },
                        new
                        {
                            productId = 2,
                            productVarietyId = 7,
                            initialPrice = 599m,
                            isDeleted = false,
                            isViewable = true,
                            price = 119.99m
                        },
                        new
                        {
                            productId = 2,
                            productVarietyId = 8,
                            initialPrice = 649m,
                            isDeleted = false,
                            isViewable = true,
                            price = 129.99m
                        },
                        new
                        {
                            productId = 3,
                            productVarietyId = 1,
                            initialPrice = 349m,
                            isDeleted = false,
                            isViewable = true,
                            price = 69.99m
                        },
                        new
                        {
                            productId = 3,
                            productVarietyId = 2,
                            initialPrice = 399m,
                            isDeleted = false,
                            isViewable = true,
                            price = 79.99m
                        },
                        new
                        {
                            productId = 3,
                            productVarietyId = 3,
                            initialPrice = 449m,
                            isDeleted = false,
                            isViewable = true,
                            price = 89.99m
                        },
                        new
                        {
                            productId = 3,
                            productVarietyId = 4,
                            initialPrice = 499m,
                            isDeleted = false,
                            isViewable = true,
                            price = 99.99m
                        },
                        new
                        {
                            productId = 3,
                            productVarietyId = 5,
                            initialPrice = 549m,
                            isDeleted = false,
                            isViewable = true,
                            price = 109.99m
                        },
                        new
                        {
                            productId = 3,
                            productVarietyId = 6,
                            initialPrice = 599m,
                            isDeleted = false,
                            isViewable = true,
                            price = 119.99m
                        },
                        new
                        {
                            productId = 3,
                            productVarietyId = 7,
                            initialPrice = 649m,
                            isDeleted = false,
                            isViewable = true,
                            price = 129.99m
                        },
                        new
                        {
                            productId = 3,
                            productVarietyId = 8,
                            initialPrice = 699m,
                            isDeleted = false,
                            isViewable = true,
                            price = 139.99m
                        },
                        new
                        {
                            productId = 4,
                            productVarietyId = 8,
                            initialPrice = 799.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 599.99m
                        },
                        new
                        {
                            productId = 4,
                            productVarietyId = 9,
                            initialPrice = 849.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 649.99m
                        },
                        new
                        {
                            productId = 4,
                            productVarietyId = 10,
                            initialPrice = 899.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 699.99m
                        },
                        new
                        {
                            productId = 4,
                            productVarietyId = 11,
                            initialPrice = 999.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 749.99m
                        },
                        new
                        {
                            productId = 4,
                            productVarietyId = 12,
                            initialPrice = 1099.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 799.99m
                        },
                        new
                        {
                            productId = 5,
                            productVarietyId = 8,
                            initialPrice = 499.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 349.99m
                        },
                        new
                        {
                            productId = 5,
                            productVarietyId = 9,
                            initialPrice = 549.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 399.99m
                        },
                        new
                        {
                            productId = 5,
                            productVarietyId = 10,
                            initialPrice = 599.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 449.99m
                        },
                        new
                        {
                            productId = 5,
                            productVarietyId = 11,
                            initialPrice = 649.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 499.99m
                        },
                        new
                        {
                            productId = 5,
                            productVarietyId = 12,
                            initialPrice = 699.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 549.99m
                        },
                        new
                        {
                            productId = 6,
                            productVarietyId = 8,
                            initialPrice = 199.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 149.99m
                        },
                        new
                        {
                            productId = 6,
                            productVarietyId = 9,
                            initialPrice = 219.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 169.99m
                        },
                        new
                        {
                            productId = 6,
                            productVarietyId = 10,
                            initialPrice = 239.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 189.99m
                        },
                        new
                        {
                            productId = 7,
                            productVarietyId = 13,
                            initialPrice = 199.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 149.99m
                        },
                        new
                        {
                            productId = 7,
                            productVarietyId = 14,
                            initialPrice = 229.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 179.99m
                        },
                        new
                        {
                            productId = 8,
                            productVarietyId = 16,
                            initialPrice = 149.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 109.99m
                        },
                        new
                        {
                            productId = 8,
                            productVarietyId = 17,
                            initialPrice = 159.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 119.99m
                        },
                        new
                        {
                            productId = 9,
                            productVarietyId = 14,
                            initialPrice = 79.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 59.99m
                        },
                        new
                        {
                            productId = 10,
                            productVarietyId = 14,
                            initialPrice = 59.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 49.99m
                        },
                        new
                        {
                            productId = 11,
                            productVarietyId = 17,
                            initialPrice = 199.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 149.99m
                        },
                        new
                        {
                            productId = 11,
                            productVarietyId = 16,
                            initialPrice = 219.99m,
                            isDeleted = false,
                            isViewable = true,
                            price = 169.99m
                        });
                });

            modelBuilder.Entity("Electronics_Store.Shared.ProductVariety", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductVarieties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Default Laptop"
                        },
                        new
                        {
                            Id = 2,
                            Name = "8GB RAM Laptop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "16GB RAM Laptop"
                        },
                        new
                        {
                            Id = 4,
                            Name = "256GB SSD Laptop"
                        },
                        new
                        {
                            Id = 5,
                            Name = "512GB SSD Laptop"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gaming Laptop"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ultra Thin Laptop"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Default Smartphone"
                        },
                        new
                        {
                            Id = 9,
                            Name = "64GB Storage Smartphone"
                        },
                        new
                        {
                            Id = 10,
                            Name = "128GB Storage Smartphone"
                        },
                        new
                        {
                            Id = 11,
                            Name = "5G Smartphone"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Flagship Smartphone"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Default Headphones"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Wireless Headphones"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Noise-Canceling Headphones"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Over-Ear Headphones"
                        },
                        new
                        {
                            Id = 17,
                            Name = "In-Ear Headphones"
                        });
                });

            modelBuilder.Entity("Electronics_Store.Shared.User.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("accountCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("userPasswordHashed")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("userPasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Address", b =>
                {
                    b.HasOne("Electronics_Store.Shared.User.User", null)
                        .WithOne("address")
                        .HasForeignKey("Electronics_Store.Shared.Address", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Electronics_Store.Shared.Order.OrderProduct", b =>
                {
                    b.HasOne("Electronics_Store.Shared.Order.Order", "order")
                        .WithMany("orderProducts")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Electronics_Store.Shared.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Electronics_Store.Shared.ProductVariety", "productVariety")
                        .WithMany()
                        .HasForeignKey("productVarietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");

                    b.Navigation("productVariety");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Picture", b =>
                {
                    b.HasOne("Electronics_Store.Shared.Product", null)
                        .WithMany("Pictures")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Product", b =>
                {
                    b.HasOne("Electronics_Store.Shared.Category", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Electronics_Store.Shared.ProductVariant", b =>
                {
                    b.HasOne("Electronics_Store.Shared.Product", "product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Electronics_Store.Shared.ProductVariety", "productVariety")
                        .WithMany()
                        .HasForeignKey("productVarietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("productVariety");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Order.Order", b =>
                {
                    b.Navigation("orderProducts");
                });

            modelBuilder.Entity("Electronics_Store.Shared.Product", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("Electronics_Store.Shared.User.User", b =>
                {
                    b.Navigation("address");
                });
#pragma warning restore 612, 618
        }
    }
}
